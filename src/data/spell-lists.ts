import { spells } from "./spells"
import { ISpell, List } from "../interface/spells"

export type ISpellLists = { 1: ISpell[]; 2: ISpell[]; 3: ISpell[] }

export const emptySpellList: ISpellLists = {
    1: [],
    2: [],
    3: [],
}

export const spellLists: Record<List, ISpellLists> = {
    incantation: {
        1: [
            spells.befriend,
            spells.confusion,
            spells.countermagic,
            spells.cureWound,
            spells.detectUnliving,
            spells.dismiss,
            spells.fear,
            spells.chantOfRetribution,
        ],
        2: [
            spells.ancestralStrike,
            spells.auraOfDefense,
            spells.chantOfProtection,
            spells.chantOfSanctuary,
            spells.halt,
            spells.ironWill,
            spells.layToRest,
            spells.speakWithDead,
        ],
        3: [
            spells.etherealWeapon,
            spells.highCountermagic,
            spells.highDismiss,
            spells.chantOfMassFear,
            spells.paladinsArmour,
            spells.protectionFromParalysis,
            spells.shieldFromCorruption,
            spells.speakWithAncestor,
        ],
    },
    lightIncantation: {
        1: [
            spells.befriend,
            spells.countermagic,
            spells.cureWound,
            spells.detectUnliving,
            spells.dismiss,
            spells.chantOfRetribution,
            spells.removeDisease,
            spells.removeFear,
        ],
        2: [
            spells.auraOfDefense,
            spells.chantOfProtection,
            spells.chantOfSanctuary,
            spells.removeDecay,
            spells.fullCure,
            spells.ironWill,
            spells.layToRest,
            spells.speakWithDead,
        ],
        3: [
            spells.smite,
            spells.highCountermagic,
            spells.highDismiss,
            spells.fortifyBody,
            spells.paladinsArmour,
            spells.protectionFromParalysis,
            spells.shieldFromCorruption,
            spells.speakWithAncestor,
        ],
    },
    darkIncantation: {
        1: [
            spells.befriend,
            spells.confusion,
            spells.countermagic,
            spells.controlUnliving,
            spells.detectUnliving,
            spells.repairUnliving,
            spells.fear,
            spells.chantOfRetribution,
        ],
        2: [
            spells.ancestralStrike,
            spells.auraOfDefense,
            spells.chantOfProtection,
            spells.wasting,
            spells.halt,
            spells.ironWill,
            spells.layToRest,
            spells.speakWithDead,
        ],
        3: [
            spells.harm,
            spells.highCountermagic,
            spells.highControlUnliving,
            spells.chantOfMassFear,
            spells.paladinsArmour,
            spells.protectionFromParalysis,
            spells.shieldFromCorruption,
            spells.speakWithAncestor,
        ],
    },
    allIncantation: {
        1: [
            spells.befriend,
            spells.confusion,
            spells.countermagic,
            spells.cureWound,
            spells.detectUnliving,
            spells.dismiss,
            spells.fear,
            spells.chantOfRetribution,
            spells.removeDisease,
            spells.removeFear,
            spells.controlUnliving,
            spells.repairUnliving,
        ],
        2: [
            spells.ancestralStrike,
            spells.auraOfDefense,
            spells.chantOfProtection,
            spells.chantOfSanctuary,
            spells.halt,
            spells.ironWill,
            spells.layToRest,
            spells.speakWithDead,
            spells.removeDecay,
            spells.fullCure,
            spells.wasting,
        ],
        3: [
            spells.etherealWeapon,
            spells.highCountermagic,
            spells.highDismiss,
            spells.chantOfMassFear,
            spells.paladinsArmour,
            spells.protectionFromParalysis,
            spells.shieldFromCorruption,
            spells.speakWithAncestor,
            spells.smite,
            spells.fortifyBody,
            spells.harm,
            spells.highControlUnliving,
        ],
    },
    spellcasting: {
        1: [
            spells.countermagic,
            spells.detectMagic,
            spells.purgePoison,
            spells.fumble,
            spells.mend,
            spells.repel,
            spells.strikedown,
            spells.traceTransport,
        ],
        2: [
            spells.blast,
            spells.chantOfMeleeImmunity,
            spells.causeCorrosion,
            spells.enthral,
            spells.ironWill,
            spells.mute,
            spells.sleep,
            spells.shatter,
        ],
        3: [
            spells.auraOfImmunity,
            spells.chantOfForbidding,
            spells.freeze,
            spells.highCountermagic,
            spells.mageArmour,
            spells.mageBolt,
            spells.teleport,
            spells.weaponOfPrimalMagic,
        ],
    },
    enchanting: {
        1: [
            spells.countermagic,
            spells.detectMagic,
            spells.fumble,
            spells.mend,
            spells.mendArmour,
            spells.purgePoison,
            spells.strikedown,
            spells.traceTransport,
        ],
        2: [
            spells.blast,
            spells.chantOfMeleeImmunity,
            spells.purgeAllPoisons,
            spells.infuseShield,
            spells.ironWill,
            spells.mute,
            spells.sleep,
            spells.shatter,
        ],
        3: [
            spells.endurance,
            spells.fortifyBody,
            spells.freeze,
            spells.highCountermagic,
            spells.mageArmour,
            spells.mageBolt,
            spells.teleport,
            spells.weaponOfPrimalMagic,
        ],
    },
    shadowMagic: {
        1: [
            spells.countermagic,
            spells.detectUnliving,
            spells.controlUnliving,
            spells.fumble,
            spells.mend,
            spells.fear,
            spells.strikedown,
            spells.traceTransport,
        ],
        2: [
            spells.blast,
            spells.chantOfMeleeImmunity,
            spells.causeCorrosion,
            spells.wasting,
            spells.bindUnliving,
            spells.mute,
            spells.sleep,
            spells.shatter,
        ],
        3: [
            spells.auraOfImmunity,
            spells.highControlUnliving,
            spells.chantOfMassFear,
            spells.highCountermagic,
            spells.mageArmour,
            spells.mageBolt,
            spells.teleport,
            spells.weaponOfPrimalMagic,
        ],
    },
    allSpellcasting: {
        1: [
            spells.countermagic,
            spells.detectMagic,
            spells.purgePoison,
            spells.fumble,
            spells.mend,
            spells.repel,
            spells.strikedown,
            spells.traceTransport,
            spells.mendArmour,
            spells.fear,
            spells.detectUnliving,
        ],
        2: [
            spells.blast,
            spells.chantOfMeleeImmunity,
            spells.causeCorrosion,
            spells.enthral,
            spells.ironWill,
            spells.mute,
            spells.sleep,
            spells.shatter,
            spells.purgeAllPoisons,
            spells.infuseShield,
            spells.bindUnliving,
            spells.wasting,
        ],
        3: [
            spells.auraOfImmunity,
            spells.chantOfForbidding,
            spells.freeze,
            spells.highCountermagic,
            spells.mageArmour,
            spells.mageBolt,
            spells.teleport,
            spells.weaponOfPrimalMagic,
            spells.endurance,
            spells.fortifyBody,
            spells.chantOfMassFear,
            spells.highControlUnliving,
        ],
    },
    healing: {
        1: [
            spells.chantOfHealWound,
            spells.purgePoison,
            spells.removeDisease,
            spells.removeFear,
            spells.removeParalysis,
        ],
        2: [
            spells.auraOfDefense,
            spells.carapaceArmour,
            spells.healFatalWound,
            spells.purgeAllPoisons,
            spells.removeDecay,
        ],
        3: [
            spells.endurance,
            spells.shieldFromCorruption,
            spells.cleansePattern,
            spells.totalHeal,
            spells.highCarapaceArmour,
        ],
    },
    corruption: {
        1: [
            spells.enthralUnliving,
            spells.controlUnliving,
            spells.detectUnliving,
            spells.fear,
            spells.repairUnliving,
        ],
        2: [
            spells.causeDisease,
            spells.causeParalysis,
            spells.wasting,
            spells.bindUnliving,
            spells.carapaceArmour,
        ],
        3: [
            spells.causeFatalWound,
            spells.embodyUnliving,
            spells.highControlUnliving,
            spells.chantOfMassFear,
            spells.totalRepairUnliving,
        ],
    },
    necromancy: {
        1: [spells.corruptBody],
        2: [spells.fullRepairUnliving, spells.strikeForFlame],
        3: [spells.greaterCorruptBody, spells.speakWithUnliving],
    },
    daemonology: {
        1: [spells.controlDaemon],
        2: [spells.fullCureDaemon, spells.strikeForWater],
        3: [spells.highControlDaemon, spells.speakWithDaemon],
    },
    theology: {
        1: [spells.controlAncestral],
        2: [spells.fullCureAncestral, spells.strikeForAir],
        3: [spells.highControlAncestral, spells.speakWithAncestor],
    },
    elementalism: {
        1: [spells.controlElemental],
        2: [spells.fullCureElemental, spells.strikeForEarth],
        3: [spells.highControlElemental, spells.speakWithElemental],
    },
    ritual: {
        1: [spells.transportation],
        2: [],
        3: [spells.networkAttunement],
    },
}
